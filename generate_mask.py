# -*- coding: utf-8 -*-
"""Generate_mask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZvkqVxRtPPSwPGNq3YS7fxUD3kaBqlq8
"""

# Commented out IPython magic to ensure Python compatibility.
!pip install git+https://github.com/mouseland/cellpose
import numpy as np
import time, os, sys
from urllib.parse import urlparse
import matplotlib.pyplot as plt
import matplotlib as mpl
# %matplotlib inline
mpl.rcParams['figure.dpi'] = 300
from cellpose import utils, io
from cellpose import io
from cellpose import models
from cellpose.io import imread

from google.colab import drive
drive.mount('/content/drive/',force_remount=True)
!ls /content/drive/MyDrive/Dataset1_benchmark/

files = ['/content/drive/MyDrive/Dataset1_benchmark/1_3_8_13_Mask.tif','/content/drive/MyDrive/Dataset1_benchmark/4_5_7_9_Mask.tif','/content/drive/MyDrive/Dataset1_benchmark/6_11_12_Mask.tif']
imgs = [imread(f) for f in files]

# DEFINE CELLPOSE MODEL
# model_type='cyto' or model_type='nuclei'
model = models.Cellpose(gpu=True, model_type='cyto')

channels = [[0,0], [0,0], [0,0]]

for chan, filename in zip(channels, files):
    img = io.imread(filename)
    img = np.moveaxis(img, 0,-1)
    filename = filename.split('.')[0]

    for z in range(img.shape[2]):
      masks, flows, styles, diams = model.eval(img[:,:,z], diameter=20, channels=chan,flow_threshold=0.4, do_3D=False)
      np.save(filename+'_'+str(z)+'.npy', masks, allow_pickle=True)

    # save results so you can load in gui
    # io.masks_flows_to_seg(img, masks, flows, diams, filename+'.npy', chan)

    # save results as png
    # io.save_to_png(img, masks, flows, filename+'.png')

print(imgs[0].shape)

print(masks.shape)

from cellpose import plot

fig = plt.figure(figsize=(12,5))
plot.show_segmentation(fig, img[:,:,-1], masks, flows[0], channels=chan)
plt.tight_layout()
plt.show()

